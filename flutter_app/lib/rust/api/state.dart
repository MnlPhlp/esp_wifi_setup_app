// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`

Future<bool> btConnected() => RustLib.instance.api.crateApiStateBtConnected();

Future<void> setBtConnected({required bool val}) =>
    RustLib.instance.api.crateApiStateSetBtConnected(val: val);

Future<String> ip() => RustLib.instance.api.crateApiStateIp();

Future<void> setIp({required String val}) =>
    RustLib.instance.api.crateApiStateSetIp(val: val);

Stream<State> initStateSink() =>
    RustLib.instance.api.crateApiStateInitStateSink();

class State {
  final bool btConnected;
  final String ip;

  const State.raw({
    required this.btConnected,
    required this.ip,
  });

  static Future<State> default_() =>
      RustLib.instance.api.crateApiStateStateDefault();

  factory State() => RustLib.instance.api.crateApiStateStateNew();

  @override
  int get hashCode => btConnected.hashCode ^ ip.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is State &&
          runtimeType == other.runtimeType &&
          btConnected == other.btConnected &&
          ip == other.ip;
}
